"""
gaci_py_init.py â€” optional Python helper to validate environment and
emit Stata do-file templates for GACI cycles.
"""

import sys, importlib, textwrap, pathlib

REQUIRED = ["numpy", "pandas", "scipy", "statsmodels"]

def check_env():
    missing = []
    for m in REQUIRED:
        try:
            importlib.import_module(m)
        except Exception:
            missing.append(m)
    if missing:
        print("Missing packages:", ", ".join(missing))
        print("Install with: pip install -r requirements.txt")
        sys.exit(1)
    print("All Python requirements satisfied.")

def write_stata_template(path="gaci_validation.do"):
    p = pathlib.Path(path)
    p.write_text(textwrap.dedent(r'''
// Auto-generated by gaci_py_init.py
clear all
set more off
// Example synthetic data
set obs 1000
gen outcome = runiform() > 0.5
gen exposure = rnormal()
gen age = rnormal(50,10)
gen bmi = rnormal(25,5)
gen smoke = rbinomial(1,0.3)

// Discover variables
gaci_suggest

// Two cycles
gaci_run, name(base_model) outcome(outcome) exposure(exposure) z(age bmi smoke) scale(logit) bsreps(200)
gaci_run, name(alt_model) outcome(outcome) exposure(exposure) z(age) scale(log)

// Compare
gaci_compare, autothresh
    '''))
    print(f"Wrote {p.resolve()}")

if __name__ == "__main__":
    check_env()
    write_stata_template()
